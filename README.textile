h1. foo-tunes

Project is aimed to help foobar2000 users update their iPods with minimum usage of iTunes. But you can use it even without foobar2000 and sync old-fashioned way by setting `pathToMusic` variable only. Key features are:

* One-click synchronization
* Bidirectional playback statistics update between iPod/iTunes and foobar2000
* iTunes media library is used only as a mediator between foobar2000 and iPod

h2. Motivation

There are lots of iPod sync software on the market but most/all of those use some reverse engineered libraries to access iPod. Major iPod software updates often brake those libs. On the other hand there's a lack of tools that allow precise control on what is done to your music. Among those tools are excellent `foobar2000` media player and its great component for syncing with iPods `foo_dop`. After release of iOS 5 it stopped working, so I decided to write a tool of my own. It uses (and launches) iTunes automatically but minimum effort is required.

h2. Prerequisites

* Windows (tested on Windows XP)
* "iTunes 10.5.2+":http://www.apple.com/itunes/download/
* "foobar2000 1.1.10+":http://www.foobar2000.org/download
* run `prerequisites/register.bat` to register dll component allowing reading data from clipboard
* install these foobar2000 components and set them up as below
** "Masstagger 1.8.4":http://www.foobar2000.org/components/view/foo_masstag
** "Run Command 1.1":http://www.foobar2000.org/components/view/foo_runcmd
** "Playback Statistics 3.0.2":http://www.foobar2000.org/components/view/foo_playcount
** "Text Tools 1.0.5":http://www.foobar2000.org/components/view/foo_texttools
* in foobar2000 create command named `iTunesSync` for the `foo_texttools` plugin with the following content:

<pre>
{"Location": "%path%", "Rating": "%rating%", "PlayedCount": "%play_count%", "PlayedDate": "%last_played%"},
</pre>

h2. Internals and TODOs

Main script is `foo-tunes.js` (modify variables in the first lines - at least `pathToMusic` and `foobar2000`). Run it with `sync.bat`. The following actions are performed:

* // TODO: move all files from folder `pathToMusic`-not-tracked to `pathToMusic` and wait for foobar2000 to get in touch with them
* iPod is synced to iTunes
* `pathToMusic` folder is scanned for new files
* album art is attached on the fly (iTunes is used)
* // TODO check whether foobar2000 is used otherwise just sync with files
* tags (see `tagMappings` variable in `foo-tunes.js`) are modified (foobar2000 masstagger is used)
* // TODO dead tracks, not found on disk, should be removed; option to remove those from iPod
* those not in iTunes library are added to it
* // TODO sync foobar2000 and iTunes statistics
* new files are sent to iPod
* iTunes stats is synced to iPod
* // TODO: move all files from `pathToMusic` to `pathToMusic`-not-tracked

h2. Recommended workflow 

Set up foobar2000 converter component to convert music to `pathToMusic` folder (or file operations component if you do not want to convert - but I recommend using Nero AAC Encoder as aac provides better quality at a lower bitrate than mp3). Do not forget to copy *.jpg along with music files.

Actually you may not use a separate folder and set your main library as iTunes file source but in this case your tags will get modifed by script (album art added if none and tags mapped if set). Also I would not expect iTunes not to mess up with your library. So keeping a separate folder is the preferred way.

Add `pathToMusic` as foobar2000 media library folder. This is required if you wish to sync playback statistics with iPod. Stats is synced based on full filename. Of course you do not want to see duplicates in your foobar2000 library. There are several ways to solve that. I use excellent `foo_facets` component to filter out tracks based on path, so I don't see those iPod-only tracks in the library at all. Another way is to attach `pathToMusic` as media library before every sync.
